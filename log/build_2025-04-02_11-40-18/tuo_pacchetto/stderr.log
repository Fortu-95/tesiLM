[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:[m[K In constructor â€˜[01m[KNodoConsenso::NodoConsenso()[m[Kâ€™:
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:19:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksub_misura[m[Kâ€™ was not declared in this scope
   19 |         [01;31m[Ksub_misura[m[K = this->create_subscription<example_interfaces::msg::Float64MultiArray>(
      |         [01;31m[K^~~~~~~~~~[m[K
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:25:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksubscriber_sinistro_[m[Kâ€™ was not declared in this scope
   25 |             [01;31m[Ksubscriber_sinistro_[m[K = this->create_subscription<example_interfaces::msg::Float64MultiArray>(
      |             [01;31m[K^~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:25:105:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KNodoConsenso::create_subscription<example_interfaces::msg::Float64MultiArray>(std::string&, int)[m[Kâ€™
   25 |  [01;31m[Kthis->create_subscription<example_interfaces::msg::Float64MultiArray>([m[K
      |  [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K

   26 | [01;31m[Knistro, 10)[m[K;
      | [01;31m[K~~~~~~~~~~~[m[K                                                            

In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:1[m[K:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:92:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)[m[Kâ€™
   92 | [01;36m[KNode[m[K::create_subscription(
      | [01;36m[K^~~~[m[K
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:92:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:25:105:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 2 provided
   25 |  [01;36m[Kthis->create_subscription<example_interfaces::msg::Float64MultiArray>([m[K
      |  [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K

   26 | [01;36m[Knistro, 10)[m[K;
      | [01;36m[K~~~~~~~~~~~[m[K                                                            

[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:30:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksubscriber_sinistro_[m[Kâ€™ was not declared in this scope
   30 |             [01;31m[Ksubscriber_sinistro_[m[K = this->create_subscription<example_interfaces::msg::Float64MultiArray>(
      |             [01;31m[K^~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:30:105:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KNodoConsenso::create_subscription<example_interfaces::msg::Float64MultiArray>(std::string&, int)[m[Kâ€™
   30 |  [01;31m[Kthis->create_subscription<example_interfaces::msg::Float64MultiArray>([m[K
      |  [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K

   31 | [01;31m[Knistro, 10)[m[K;
      | [01;31m[K~~~~~~~~~~~[m[K                                                            

In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:1[m[K:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:92:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)[m[Kâ€™
   92 | [01;36m[KNode[m[K::create_subscription(
      | [01;36m[K^~~~[m[K
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:92:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:30:105:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 2 provided
   30 |  [01;36m[Kthis->create_subscription<example_interfaces::msg::Float64MultiArray>([m[K
      |  [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K

   31 | [01;36m[Knistro, 10)[m[K;
      | [01;36m[K~~~~~~~~~~~[m[K                                                            

[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:36:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksubscriber_destro_[m[Kâ€™ was not declared in this scope
   36 |             [01;31m[Ksubscriber_destro_[m[K = this->create_subscription<example_interfaces::msg::Float64MultiArray>(
      |             [01;31m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:36:103:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KNodoConsenso::create_subscription<example_interfaces::msg::Float64MultiArray>(std::string&, int)[m[Kâ€™
   36 |  [01;31m[Kthis->create_subscription<example_interfaces::msg::Float64MultiArray>([m[K
      |  [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K

   37 | [01;31m[Kdestro, 10)[m[K;
      | [01;31m[K~~~~~~~~~~~[m[K                                                            

In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:1[m[K:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:92:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)[m[Kâ€™
   92 | [01;36m[KNode[m[K::create_subscription(
      | [01;36m[K^~~~[m[K
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:92:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:36:103:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 2 provided
   36 |  [01;36m[Kthis->create_subscription<example_interfaces::msg::Float64MultiArray>([m[K
      |  [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K

   37 | [01;36m[Kdestro, 10)[m[K;
      | [01;36m[K~~~~~~~~~~~[m[K                                                            

[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:42:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksubscriber_destro_[m[Kâ€™ was not declared in this scope
   42 |             [01;31m[Ksubscriber_destro_[m[K = this->create_subscription<example_interfaces::msg::Float64MultiArray>(
      |             [01;31m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:42:103:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KNodoConsenso::create_subscription<example_interfaces::msg::Float64MultiArray>(std::string&, int)[m[Kâ€™
   42 |  [01;31m[Kthis->create_subscription<example_interfaces::msg::Float64MultiArray>([m[K
      |  [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K

   43 | [01;31m[Kdestro, 10)[m[K;
      | [01;31m[K~~~~~~~~~~~[m[K                                                            

In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:1[m[K:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:92:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)[m[Kâ€™
   92 | [01;36m[KNode[m[K::create_subscription(
      | [01;36m[K^~~~[m[K
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:92:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:42:103:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 2 provided
   42 |  [01;36m[Kthis->create_subscription<example_interfaces::msg::Float64MultiArray>([m[K
      |  [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K

   43 | [01;36m[Kdestro, 10)[m[K;
      | [01;36m[K~~~~~~~~~~~[m[K                                                            

[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:[m[K In member function â€˜[01m[Kvoid NodoConsenso::callback_Vv(std_msgs::msg::Float64_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:52:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstima_ricevuta_[m[Kâ€™ was not declared in this scope
   52 |         [01;31m[Kstima_ricevuta_[m[K.push_back(msg->data);
      |         [01;31m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:[m[K In member function â€˜[01m[Kvoid NodoConsenso::callback_misura(std_msgs::msg::Float64_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:56:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kmisura_ricevuta_[m[Kâ€™ was not declared in this scope
   56 |         [01;31m[Kmisura_ricevuta_[m[K.push_back(msg->data);
      |         [01;31m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:[m[K In member function â€˜[01m[Kstd::vector<int> NodoConsenso::appendColonne(const std::vector<std::vector<int> >&, const std::vector<std::vector<int> >&)[m[Kâ€™:
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:107:30:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::vector<int>::push_back(const value_type&)[m[Kâ€™
  107 |             [01;31m[Kvettore.push_back(vettore2[k])[m[K;
      |             [01;31m[K~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/11/vector:67[m[K,
                 from [01m[K/usr/include/c++/11/functional:62[m[K,
                 from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
                 from [01m[K/usr/include/c++/11/algorithm:74[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:1[m[K:
[01m[K/usr/include/c++/11/bits/stl_vector.h:1187:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int][m[Kâ€™
 1187 |       [01;36m[Kpush_back[m[K(const value_type& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/stl_vector.h:1187:35:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst value_type[m[Kâ€™ {aka â€˜[01m[Kconst std::vector<int>[m[Kâ€™} to â€˜[01m[Kconst value_type&[m[Kâ€™ {aka â€˜[01m[Kconst int&[m[Kâ€™}
 1187 |       push_back([01;36m[Kconst value_type& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/11/bits/stl_vector.h:1203:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int][m[Kâ€™
 1203 |       [01;36m[Kpush_back[m[K(value_type&& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/stl_vector.h:1203:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst value_type[m[Kâ€™ {aka â€˜[01m[Kconst std::vector<int>[m[Kâ€™} to â€˜[01m[Kstd::vector<int>::value_type&&[m[Kâ€™ {aka â€˜[01m[Kint&&[m[Kâ€™}
 1203 |       push_back([01;36m[Kvalue_type&& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:[m[K In member function â€˜[01m[Kvoid NodoConsenso::crea_stima()[m[Kâ€™:
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:113:14:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kmisura_ricevuta[m[Kâ€™ was not declared in this scope
  113 |         if (![01;31m[Kmisura_ricevuta[m[K.empty()) {
      |              [01;31m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:114:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kmisura_ricevuta_[m[Kâ€™ was not declared in this scope
  114 |             float misura = [01;31m[Kmisura_ricevuta_[m[K;
      |                            [01;31m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:115:56:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<std::vector<int> >[m[Kâ€™)
  115 |             std::vector<std::vector<double>>  V0 = [32m[K1/8[m[K [01;31m[K*[m[K [34m[KJpri[m[K + moltiplicaMatrici(moltiplicaMatrici(trasposta(H),R),H);
      |                                                    [32m[K~~~[m[K [01;31m[K^[m[K [34m[K~~~~[m[K
      |                                                     [32m[K|[m[K    [34m[K|[m[K
      |                                                     [32m[Kint[m[K  [34m[Kstd::vector<std::vector<int> >[m[K
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:115:110:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::vector<std::vector<int> >[m[Kâ€™ to â€˜[01m[Kconst std::vector<std::vector<double, std::allocator<double> > >&[m[Kâ€™
  115 |  = 1/8 * Jpri + moltiplicaMatrici(moltiplicaMatrici([01;31m[Ktrasposta(H)[m[K,R),H);
      |                                                     [01;31m[K~~~~~~~~~^~~[m[K
      |                                                              [01;31m[K|[m[K
      |                                                              [01;31m[Kstd::vector<std::vector<int> >[m[K

[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:75:49:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::vector<std::vector<double, std::allocator<double> > > NodoConsenso::moltiplicaMatrici(const std::vector<std::vector<double, std::allocator<double> > >&, const std::vector<std::vector<double, std::allocator<double> > >&)[m[Kâ€™
   75 |         [01;36m[Kconst std::vector<std::vector<double>>& A[m[K,
      |         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:116:149:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KB[m[Kâ€™ was not declared in this scope
  116 | icevuta) + moltiplicaMatrici(moltiplicaMatrici(trasposta(H),[01;31m[KB[m[K),misura_ricevuta);
      |                                                             [01;31m[K^[m[K

[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:117:65:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::vector<std::vector<double, std::allocator<double> > >[m[Kâ€™ to â€˜[01m[Kconst std::vector<std::vector<int> >&[m[Kâ€™
  117 |             std::vector<std::vector<double>>  V = appendColonne([01;31m[KV0[m[K,v0);
      |                                                                 [01;31m[K^~[m[K
      |                                                                 [01;31m[K|[m[K
      |                                                                 [01;31m[Kstd::vector<std::vector<double, std::allocator<double> > >[m[K
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:97:73:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::vector<int> NodoConsenso::appendColonne(const std::vector<std::vector<int> >&, const std::vector<std::vector<int> >&)[m[Kâ€™
   97 | tor<int> appendColonne([01;36m[Kconst std::vector<std::vector<int>>& matrice[m[K,const std::vector<std::vector<int>>& vettore2) {
      |                        [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~[m[K

[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:119:45:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KFloat64MultiArray[m[Kâ€™ is not a member of â€˜[01m[Kstd_msgs::msg[m[Kâ€™; did you mean â€˜[01m[Kexample_interfaces::msg::Float64MultiArray[m[Kâ€™?
  119 |             auto messaggio = std_msgs::msg::[01;31m[KFloat64MultiArray[m[K();
      |                                             [01;31m[K^~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/humble/include/example_interfaces/example_interfaces/msg/float64_multi_array.hpp:7[m[K,
                 from [01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:3[m[K:
[01m[K/opt/ros/humble/include/example_interfaces/example_interfaces/msg/detail/float64_multi_array__struct.hpp:131:7:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kexample_interfaces::msg::Float64MultiArray[m[Kâ€™ declared here
  131 | using [01;36m[KFloat64MultiArray[m[K =
      |       [01;36m[K^~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:1[m[K:
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void>, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void>, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void>, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void>, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:19:91:[m[K   required from here
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&)>, std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>[m[Kâ€™})
  394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:1[m[K:
[01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&)>, std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
 1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
      |         [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&)>, std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&)>, std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&)>, std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&)>, std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&)>, std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&)>, std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void>, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void>, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void>, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void>, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:19:91:[m[K   required from here
[01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
      |               [01;31m[K^~~~~~~~~~~~~~~[m[K
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void>, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void>, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void>, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::Float64MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void>, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/fortunato/ros2_ws/src/nodi/src/nodo.cpp:19:91:[m[K   required from here
[01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&)>, std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
 1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&)>, std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
 1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&)>, std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
 1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::_Bind<void (NodoConsenso::*(NodoConsenso*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_msgs::msg::Float64_<std::allocator<void> > >)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&)>, std::function<void(const example_interfaces::msg::Float64MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> >, std::default_delete<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<example_interfaces::msg::Float64MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
 1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~[m[K
gmake[2]: *** [CMakeFiles/nodo.dir/build.make:76: CMakeFiles/nodo.dir/src/nodo.cpp.o] Errore 1
gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/nodo.dir/all] Errore 2
gmake: *** [Makefile:146: all] Errore 2
